diff --git a/src/modules/avoutput/AVOutput.cpp b/src/modules/avoutput/AVOutput.cpp
index d6c5f70..42a34ce 100644
--- a/src/modules/avoutput/AVOutput.cpp
+++ b/src/modules/avoutput/AVOutput.cpp
@@ -34,7 +34,7 @@ core::Parameters AVOutput::configure() {
 
 namespace {
 
-void add_stream(StreamDescription *output_stream, AVFormatContext *fmt_ctx, AVCodec **codec, enum AVCodecID codec_id) {
+void add_stream(StreamDescription *output_stream, AVFormatContext *fmt_ctx, const AVCodec **codec, enum AVCodecID codec_id) {
     #if defined(__arm__) || defined(__aarch64__)
     // Should be Raspberry specific, not all arm, uses HW encoders for video
     if (codec_id == AV_CODEC_ID_H264) {
@@ -206,7 +206,7 @@ bool write_audio_frame(AVFormatContext *fmt_ctx, StreamDescription *output_strea
     return write_frame(fmt_ctx, codec_ctx, output_stream->stream, output_stream->tmp_frame, output_stream->tmp_pkt);
 }
 
-void open_video(AVCodec *codec, StreamDescription *output_stream, AVDictionary *opt_arg) {
+void open_video(const AVCodec *codec, StreamDescription *output_stream, AVDictionary *opt_arg) {
     int ret;
     AVCodecContext *codec_ctx = output_stream->enc;
     AVDictionary *opt = nullptr;
@@ -230,7 +230,7 @@ void open_video(AVCodec *codec, StreamDescription *output_stream, AVDictionary *
         throw(std::runtime_error("Could not copy the stream parameters."));
 }
 
-void open_audio(AVCodec *codec, StreamDescription *output_stream, AVDictionary *opt_arg) {
+void open_audio(const AVCodec *codec, StreamDescription *output_stream, AVDictionary *opt_arg) {
     AVCodecContext *codec_ctx = output_stream->enc;
     AVDictionary *opt = nullptr;
     av_dict_copy(&opt, opt_arg, 0);
@@ -315,7 +315,7 @@ AVOutput::~AVOutput() noexcept {
 void AVOutput::initialize() {
 	video_st_ = {};
 	audio_st_ = {};
-    AVCodec *audio_codec, *video_codec;
+    const AVCodec *audio_codec, *video_codec;
     AVDictionary *opt = nullptr;
 
     memset(&fmt_ctx_, 0, sizeof(fmt_ctx_));
diff --git a/src/modules/avoutput/AVOutput.h b/src/modules/avoutput/AVOutput.h
index a78800a..3e0be7e 100644
--- a/src/modules/avoutput/AVOutput.h
+++ b/src/modules/avoutput/AVOutput.h
@@ -18,6 +18,7 @@ extern "C" {
 #include <libavutil/mathematics.h>
 #include <libavutil/timestamp.h>
 #include <libavformat/avformat.h>
+#include <libavcodec/avcodec.h>
 #include <libswscale/swscale.h>
 #include <libswresample/swresample.h>
 }
diff --git a/src/modules/rawavfile/AVDecoder.cpp b/src/modules/rawavfile/AVDecoder.cpp
index 0ed83d7..39e8771 100644
--- a/src/modules/rawavfile/AVDecoder.cpp
+++ b/src/modules/rawavfile/AVDecoder.cpp
@@ -68,10 +68,6 @@ bool AVDecoder::reset_decoder(const core::pCompressedVideoFrame& frame)
         return false;
     }
 
-    // Is this really needed?
-    if (codec_->capabilities & AV_CODEC_CAP_TRUNCATED) {
-        ctx_->flags |= AV_CODEC_FLAG_TRUNCATED;
-    }
     if (codec_->capabilities & AV_CODEC_CAP_PARAM_CHANGE) {
         ctx_->flags |= AV_CODEC_CAP_PARAM_CHANGE;
     }
diff --git a/src/modules/rawavfile/AVDecoder.h b/src/modules/rawavfile/AVDecoder.h
index 8292e0a..fc823e2 100644
--- a/src/modules/rawavfile/AVDecoder.h
+++ b/src/modules/rawavfile/AVDecoder.h
@@ -42,7 +42,7 @@ private:
     int                                           threads_;
     libav::thread_type_t                          thread_type_;
     core::utils::managed_resource<AVCodecContext> ctx_;
-    AVCodec*                                      codec_;
+    const AVCodec*                                      codec_;
     AVFrame*                                      avframe;
     std::unique_ptr<AVPacket, AVPacketDeleter>    avpkt_;
 };
diff --git a/src/modules/rawavfile/RawAVFile.cpp b/src/modules/rawavfile/RawAVFile.cpp
index d94e61d..910c608 100644
--- a/src/modules/rawavfile/RawAVFile.cpp
+++ b/src/modules/rawavfile/RawAVFile.cpp
@@ -102,7 +102,7 @@ struct RawAVFile::stream_detail_t {
     AVStream*       stream;
     std::unique_ptr<AVCodecContext, AVCodecContextDeleter>
                     ctx;
-    AVCodec*        codec;
+    const AVCodec*        codec;
     std::unique_ptr<SwrContext, SwrContextDeleter>
                     swr_ctx;
     format_t        format;
@@ -265,8 +265,6 @@ bool RawAVFile::open_file(const std::string& filename)
                 log[log::error] << "Failed to find decoder for video stream " << i;
                 return false;
             }
-            if (video_streams_[i].codec->capabilities & AV_CODEC_CAP_TRUNCATED)
-                video_streams_[i].ctx->flags |= AV_CODEC_FLAG_TRUNCATED;
             if (video_streams_[i].format_out != 0) {
                 video_streams_[i].ctx->pix_fmt = libav::avpixelformat_from_yuri(video_streams_[i].format_out);
             }
